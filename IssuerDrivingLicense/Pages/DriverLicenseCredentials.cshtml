@page
@model IssuerDrivingLicense.Pages.DriverLicenseCredentialsModel
@{
}

<h3>@Model.DriverLicenseMessage</h3>
<br />
<br />

@if (Model.HasDriverLicense)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm">
                <div>
                    <img src="~/ndl_car_01.png" width="200" alt="Driver License">
                    <div>
                        <b>Driver Licence: @Html.DisplayFor(model => model.DriverLicense.UserName)</b>
                        <hr />
                        <dl class="row">
                            <dt class="col-sm-4">Issued</dt>
                            <dd class="col-sm-8">
                                @Model.DriverLicense.IssuedAt.ToString("MM/dd/yyyy")
                            </dd>
                            <dt class="col-sm-4">
                                @Html.DisplayNameFor(model => model.DriverLicense.Name)
                            </dt>
                            <dd class="col-sm-8">
                                @Html.DisplayFor(model => model.DriverLicense.Name)
                            </dd>
                            <dt class="col-sm-4">First Name</dt>
                            <dd class="col-sm-8">
                                @Html.DisplayFor(model => model.DriverLicense.FirstName)
                            </dd>
                            <dt class="col-sm-4">License Type</dt>
                            <dd class="col-sm-8">
                                @Html.DisplayFor(model => model.DriverLicense.LicenseType)
                            </dd>
                            <dt class="col-sm-4">Date of Birth</dt>
                            <dd class="col-sm-8">
                                @Model.DriverLicense.DateOfBirth.ToString("MM/dd/yyyy")
                            </dd>
                            <dt class="col-sm-4">Issued by</dt>
                            <dd class="col-sm-8">
                                @Html.DisplayFor(model => model.DriverLicense.Issuedby)
                            </dd>
                            <dt class="col-sm-4">
                                @Html.DisplayNameFor(model => model.DriverLicense.Valid)
                            </dt>
                            <dd class="col-sm-8">
                                @Html.DisplayFor(model => model.DriverLicense.Valid)
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>

            <div class="col-sm">
                <button type="button" id="sign-in" class="btn btn-primary">GET CREDENTIAL</button>
                <div id="qrText"  style="display:none;">
                </div>

                <a id="deeplink" style="display: none;">Tap to open Authenticator on mobile</a>

                <div id="qrcode"></div>
                <br>

                <div id="pinCodeText" style="display: none;text-align: left"/>
                <br>

            </div>

            <div id="message-wrapper"  style="display: none">
                <i class="fas fa-user-check green icon-text-large "></i>
                <div id="message"/>
                <br />
                <div id="payload"/>
            </div>

        </div>
    </div>
}

@section scripts {
    <script src="qrcode.min.js"></script>
    <script>
        var signIn = document.getElementById('sign-in');
        var signOut = document.getElementById('sign-out');
        var display = document.getElementById('display');
        var qrcode = new QRCode("qrcode", { width: 300, height: 300 });
        var respIssuanceReq = null;

        signIn.addEventListener('click', () => {
            fetch('/api/issuer/issuance-request')
            .then(function(response) {
                response.text()
                .catch(error => document.getElementById("message").innerHTML = error)
                .then(function(message) {
                    respIssuanceReq = JSON.parse(message);
                    if( /Android/i.test(navigator.userAgent) ) {
                        console.log(`Android device! Using deep link (${respIssuanceReq.url}).`);
                        window.location.href = respIssuanceReq.url; setTimeout(function () {
                        window.location.href = "https://play.google.com/store/apps/details?id=com.azure.authenticator"; }, 2000);
                    } else if (/iPhone/i.test(navigator.userAgent)) {
                        console.log(`iOS device! Using deep link (${respIssuanceReq.url}).`);
                        window.location.replace(respIssuanceReq.url);
                    } else {
                        console.log(`Not Android or IOS. Generating QR code encoded with ${message}`);
                        qrcode.makeCode(respIssuanceReq.url);
                        document.getElementById('sign-in').style.display = "none";
                        document.getElementById('qrText').style.display = "block";
                        if (respIssuanceReq.pin) {
                            document.getElementById('pinCodeText').innerHTML = "Pin code: " + respIssuanceReq.pin;
                            document.getElementById('pinCodeText').style.display = "block";
                        }
                    }
                }).catch(error => { console.log(error.message); })
            }).catch(error => { console.log(error.message); })

            var checkStatus = setInterval(function () {
                if(respIssuanceReq){
                    fetch('api/issuer/issuance-response?id=' + respIssuanceReq.id )
                    .then(response => response.text())
                    .catch(error => document.getElementById("message").innerHTML = error)
                    .then(response => {
                        if (response.length > 0) {
                            console.log(response)
                            respMsg = JSON.parse(response);
                            // QR Code scanned, show pincode if pincode is required
                            if (respMsg.status == 'request_retrieved') {
                                document.getElementById('message-wrapper').style.display = "block";
                                document.getElementById('qrText').style.display = "none";
                                document.getElementById('qrcode').style.display = "none";

                                if (respMsg.pin) {
                                    document.getElementById('pinCodeText').style.display = "visible";
                                }
                                document.getElementById('message').innerHTML = respMsg.message;
                            }
                            if (respMsg.status == 'issuance_successful') {
                                document.getElementById('pinCodeText').style.display = "none";
                                document.getElementById('message').innerHTML = respMsg.message;
                                clearInterval(checkStatus);
                            }
                            if (respMsg.status == 'issuance_error') {
                                document.getElementById('pinCodeText').style.display = "none";
                                document.getElementById('message').innerHTML = "Issuance error occured, did you enter the wrong pincode? Please refresh the page and try again.";
                                document.getElementById('payload').innerHTML = "Payload: " + respMsg.payload;
                                clearInterval(checkStatus);
                            }
                        }
                    })
                }
                
            }, 1500); //change this to higher interval if you use ngrok to prevent overloading the free tier service
        })
    </script>
}
